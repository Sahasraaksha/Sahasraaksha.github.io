{"version":3,"file":"static/js/326.d1d77b6c.chunk.js","mappings":"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","sources":["components/ContentBlock/LeftContentBlock/styles.ts","components/ContentBlock/LeftContentBlock/index.tsx","components/ContentBlock/RightContentBlock/styles.ts","components/ContentBlock/RightContentBlock/index.tsx","components/ContentBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LeftContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 7rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  LeftContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n} from \"./styles\";\r\n\r\nconst LeftContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n\r\n  const checkVideo = () => {\r\n    return icon.endsWith(\"mp4\");\r\n  }\r\n\r\n  const iconMp4 = \"videos/\" + icon.substring(0, icon.lastIndexOf(\".\")) + \".mp4\";\r\n  const iconWebm = \"videos/\" + icon.substring(0, icon.lastIndexOf(\".\")) + \".webm\";\r\n\r\n  let iconElement:any;\r\n\r\n  if(checkVideo()) {\r\n    iconElement = (\r\n      <video width=\"100%\" height=\"100%\" autoPlay muted loop>\r\n        <source src={iconMp4} type=\"video/mp4\"></source>\r\n        <source src={iconWebm} type=\"video/webm\"></source>\r\n      </video>       \r\n    )\r\n  } else {\r\n    iconElement = <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n  }\r\n\r\n  return (\r\n    <LeftContentSection>\r\n      <Fade direction=\"left\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            {iconElement}\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ServiceWrapper>\r\n                <Row justify=\"space-between\">\r\n                  {typeof section === \"object\" &&\r\n                    section.map((item: any, id: number) => {\r\n                      return (\r\n                        <Col key={id} span={11}>\r\n                          <SvgIcon src={item.icon} width=\"60px\" height=\"60px\" />\r\n                          <MinTitle>{t(item.title)}</MinTitle>\r\n                          <MinPara>{t(item.content)}</MinPara>\r\n                        </Col>\r\n                      );\r\n                    })}\r\n                </Row>\r\n              </ServiceWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </LeftContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(LeftContentBlock);\r\n","import styled from \"styled-components\";\r\n\r\nexport const RightBlockContainer = styled(\"section\")`\r\n  position: relative;\r\n  padding: 7rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 8rem 0 6rem;\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 4rem 0 3rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-bottom: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { SvgIcon } from \"../../../common/SvgIcon\";\r\nimport { Button } from \"../../../common/Button\";\r\nimport { ContentBlockProps } from \"../types\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport {\r\n  RightBlockContainer,\r\n  Content,\r\n  ContentWrapper,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\nimport ReactPlayer from 'react-player'\r\n\r\nconst RightBlock = ({\r\n  title,\r\n  content,\r\n  button,\r\n  icon,\r\n  t,\r\n  id,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const checkVideo = () => {\r\n    return icon.endsWith(\"mp4\");\r\n  }\r\n\r\n  const iconMp4 = \"videos/\" + icon.substring(0, icon.lastIndexOf(\".\")) + \".mp4\";\r\n  const iconWebm = \"videos/\" + icon.substring(0, icon.lastIndexOf(\".\")) + \".webm\";\r\n\r\n  let iconElement:any;\r\n\r\n  if(checkVideo()) {\r\n    iconElement = (\r\n      <video width=\"100%\" height=\"100%\" autoPlay muted loop>\r\n        <source src={iconMp4} type=\"video/mp4\"></source>\r\n        <source src={iconWebm} type=\"video/webm\"></source>\r\n      </video>       \r\n    )\r\n  } else {\r\n    iconElement = <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n  }\r\n\r\n\r\n  return (\r\n    <RightBlockContainer>\r\n      <Fade direction=\"right\">\r\n        <Row justify=\"space-between\" align=\"middle\" id={id}>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>{t(content)}</Content>\r\n              <ButtonWrapper>\r\n                {typeof button === \"object\" &&\r\n                  button.map((item: any, id: number) => {\r\n                    return (\r\n                      <Button\r\n                        key={id}\r\n                        color={item.color}\r\n                        fixedWidth={true}\r\n                        onClick={() => scrollTo(\"mission\")}\r\n                      >\r\n                        {t(item.title)}\r\n                      </Button>\r\n                    );\r\n                  })}\r\n              </ButtonWrapper>\r\n            </ContentWrapper>\r\n          </Col>\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            {iconElement}\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </RightBlockContainer>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(RightBlock);\r\n","import LeftContentBlock from \"./LeftContentBlock\";\r\nimport RightContentBlock from \"./RightContentBlock\";\r\nimport { ContentBlockProps } from \"./types\";\r\n\r\nconst ContentBlock = (props: ContentBlockProps) => {\r\n  if (props.type === \"left\") return <LeftContentBlock {...props} />;\r\n  if (props.type === \"right\") return <RightContentBlock {...props} />;\r\n  return null;\r\n};\r\n\r\nexport default ContentBlock;\r\n"],"names":["LeftContentSection","styled","Content","ContentWrapper","ServiceWrapper","MinTitle","MinPara","withTranslation","iconElement","icon","title","content","section","t","id","iconMp4","substring","lastIndexOf","iconWebm","endsWith","width","height","autoPlay","muted","loop","src","type","SvgIcon","direction","justify","align","lg","md","sm","xs","map","item","span","RightBlockContainer","ButtonWrapper","button","Button","color","fixedWidth","onClick","document","getElementById","scrollIntoView","behavior","scrollTo","props","RightContentBlock"],"sourceRoot":""}